name: build-install-matrix

# Controls when the action will run.
on:
  schedule:
    - cron: '*/30 * * * *' # run 30th minute
  pull_request:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'ma**'
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'ma**'

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    env:
      FORCE: "--force"
      GNOSTR: "gnostr"
      NOSTRIL: "nostril"
      POW: "16"
      DAMUS: "wss://relay.damus.io"
      NOS: "wss://nos.lol"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rustup: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - name: echo test
        run: |
          echo GNOSTR=${{ env.GNOSTR }}
          echo NOSTRIL=${{ env.NOSTRIL }}
          echo MEMPOOL=${{ env.MEMPOOL }}
          echo POW=${{ env.POW }}
          echo DAMUS=${{ env.DAMUS }}
          echo NOS=${{ env.NOS }}
        env:
          MEMPOOL: "mempool"
      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ !env.ACT }}
        with:
          access_token: ${{ github.token }}

      - name: Restore rustup
        id: cache-rustup-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ runner.os }}-rustup-${{ matrix.rustup }}

      - name: Restore cargo
        id: cache-cargo-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ matrix.rustup }}

      - name: Restore target
        id: cache-target-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ runner.os }}-target-${{ matrix.rustup }}

      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          set-safe-directory: 'true'
          fetch-depth: '0'
          fetch-tags: 'false'

      - run: rustup default ${{ matrix.rustup }}
      - run: cargo search gnostr --limit 100
      - run: cargo install cargo-binstall@1.9.0 || true
        #if: matrix.os != 'windows-latest'
      - run: cargo-binstall --no-confirm mempool_space
      - run: cargo-binstall --no-confirm gnostr-xq
      - run: cargo-binstall --no-confirm gnostr
      - run: brew tap gnostr-org/homebrew-gnostr-org || true
        if: matrix.os != 'windows-latest'
      - run: brew tap nostorg/nostr || true
        if: matrix.os != 'windows-latest'
      - run: brew tap randymcmillan/homebrew-randymcmillan || true
        if: matrix.os != 'windows-latest'
      - run: |
          cargo test -vv ##-- --nocapture
        if: matrix.rustup == 'stable'
      - run: |
          cargo install --path . --force
        if: matrix.os == 'windows-latest'
      - run: |
          make cargo-install || sudo make cargo-install
        if: matrix.os != 'windows-latest'
      - run: gnostr --help
      - run: gnostr ngit --help
      - run: gnostr ngit fetch --help
      - run: gnostr ngit init --help
      - run: gnostr ngit send --help
      - run: gnostr ngit list --help
      - run: gnostr ngit push --help
      - run: gnostr ngit pull --help
      - run: gnostr ngit login --help

      - run: V=1 sudo make docs || true
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && matrix.os == 'ubuntu-matrix'

      - name: Save rustup
        id: cache-rustup-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ steps.cache-rustup-restore.outputs.cache-primary-key }}
      - name: Save cargo
        id: cache-cargo-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ steps.cache-cargo-restore.outputs.cache-primary-key }}
      - name: Save target
        id: cache-target-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ steps.cache-target-restore.outputs.cache-primary-key }}
